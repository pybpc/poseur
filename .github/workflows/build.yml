name: Build

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install .[lint,test]
    - name: Run linters
      run: python ci/run_linters.py
      env:
        COLORLABELS_TTY: 1
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.5', '3.6', '3.7', '3.8', '3.9', 'pypy3']
        experimental: [false]
        include:
          - os: ubuntu-18.04
            python-version: '3.4'
            experimental: false
          - os: ubuntu-latest
            python-version: '3.10-dev'
            experimental: true
          - os: macos-latest
            python-version: '3.10-dev'
            experimental: true
          - os: windows-latest
            python-version: '3.10-dev'
            experimental: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install .[test]
    - name: First round test (local code, with coverage)
      run: |
        python ci/path_checker.py
        coverage run -m pytest --color=yes
    - name: Run doctest if on latest Python
      if: ${{ matrix.python-version == '3.9' }}
      run: pytest --color=yes --doctest-only poseur.py tests
    - name: Second round test (installed package, without coverage)
      run: |
        mv poseur.py poseur.py~
        python ci/path_checker.py strict
        pytest --color=yes
        mv poseur.py~ poseur.py
    - name: Upload coverage report
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9' }}
      run: |
        pip install codecov
        codecov
  publish:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: python -m pip install --upgrade pip setuptools wheel build
    - name: Build a binary wheel and a source tarball
      run: python -m build --sdist --wheel --outdir dist/ .
    - name: Publish distribution to PyPI
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
